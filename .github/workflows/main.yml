name: Build and Test

on: [push, pull_request]

jobs:
  bazel-posix:
    strategy:
      matrix:
        os: [macos-10.15, macos-11.0, ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build
        run: |
          bazel build -c opt //...
      - name: Build with clang
        run: |
          bazel build -c opt --config clang //...
      - name: Test with ASan
        run: |
          bazel test -c dbg --config asan //...
      - name: Test with UBSan
        run: |
          bazel test -c dbg --config ubsan //...

  bazel-windows:
    strategy:
      matrix:
        os: [windows-2016, windows-2019]
        cpu: [x64, x64_x86]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build
        run: |
          bazel build -c opt --cpu ${{ matrix.cpu }}_windows //...
      - name: Test
        run: |
          bazel test -c dbg --cpu ${{ matrix.cpu }}_windows //...

  cmake:
    strategy:
      matrix:
        build-type: [Debug, Release]
        os: [macos-10.15, macos-11.0, ubuntu-18.04, ubuntu-20.04, windows-2016, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Create Build Directory
        run: cmake -E make_directory ${{github.workspace}}.build
      - name: Configure
        run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
        working-directory: ${{github.workspace}}.build
      - name: Build
        run: cmake --build .
        working-directory: ${{github.workspace}}.build

  python-posix:
    strategy:
      matrix:
        os: [macos-10.15, macos-11.0, ubuntu-18.04, ubuntu-20.04]
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build pytest tox
      - name: Build package
        run: python -m build
      - name: Run tox
        run: tox -e py

  python-windows:
    strategy:
      matrix:
        os: [windows-2016, windows-2019]
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]
        python-architecture: [x86, x64]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.python-architecture }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build pytest tox
      - name: Build package
        run: python -m build
      - name: Run tox
        run: tox -e py

  python-old-gcc:
    strategy:
      matrix:
        gcc-version: [4.8]
        os: [ubuntu-18.04]
        python-version: [3.6]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install gcc-${{ matrix.gcc-version }}
        run: sudo apt-get install -y gcc-${{ matrix.gcc-version }} g++-${{ matrix.gcc-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build pytest tox
      - name: Build package
        run: python -m build
        env:
          CC: gcc-${{ matrix.gcc-version }}
          CXX: g++-${{ matrix.gcc-version }}
      - name: Run tox
        run: tox -e py
        env:
          CC: gcc-${{ matrix.gcc-version }}
          CXX: g++-${{ matrix.gcc-version }}
