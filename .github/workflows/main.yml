name: Build and Test

on: [push, pull_request]

jobs:
  bazel-posix-clang:
    strategy:
      matrix:
        os: [macos-11, macos-12, macos-13, ubuntu-20.04, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build
        run: |
          bazel build -c opt --config=clang //...
      - name: Test
        run: |
          bazel test -c dbg --config=clang --config=asan --config=ubsan //...

  bazel-posix-gcc:
    strategy:
      matrix:
        os: [macos-11, macos-12, macos-13, ubuntu-20.04, ubuntu-22.04]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build
        run: |
          bazel build -c opt //...
      - name: Test
        run: |
          bazel test -c dbg --config=asan --config=ubsan //...

  bazel-windows:
    strategy:
      matrix:
        os: [windows-2019, windows-2022]
        cpu: [x64, x64_x86]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build
        run: |
          bazel build -c opt --cpu ${{ matrix.cpu }}_windows //...
      - name: Test
        run: |
          bazel test -c dbg --cpu ${{ matrix.cpu }}_windows //...

  cmake:
    strategy:
      matrix:
        build-type: [Debug, Release]
        os: [macos-11, macos-12, macos-13, ubuntu-20.04, ubuntu-22.04, windows-2019, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Create Build Directory
        run: cmake -E make_directory ${{github.workspace}}.build
      - name: Configure
        run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
        working-directory: ${{github.workspace}}.build
      - name: Build
        run: cmake --build .
        working-directory: ${{github.workspace}}.build

  python-posix:
    strategy:
      matrix:
        os: [macos-11, macos-12, macos-13, ubuntu-20.04, ubuntu-22.04]
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build pytest tox
      - name: Build package
        run: python -m build
      - name: Run tox
        run: tox -e py

  python-windows:
    strategy:
      matrix:
        os: [windows-2019, windows-2022]
        python-version: [3.7, 3.8, 3.9, "3.10", "3.11"]
        python-architecture: [x86, x64]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.python-architecture }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build pytest tox
      - name: Build package
        run: python -m build
      - name: Run tox
        run: tox -e py
